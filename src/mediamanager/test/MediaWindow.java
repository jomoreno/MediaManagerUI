/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import java.awt.Color;
import java.net.URL;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;
import mediamanager.gui.InternalGUICreator;
import mediamanager.imgs.BackgroundImage;
import mediamanager.gui.InvisibleInternalFrame;
import mediamanager.gui.TrasparentRender;

/**
 *
 * @author a07729a
 */
public class MediaWindow extends javax.swing.JFrame implements TreeSelectionListener {

    private JTree tree;
    /**
     * Creates new form MediaWindow
     */
    public MediaWindow() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        desktopPane.setBorder(new BackgroundImage());
        populateDesktopGUI();      
        this.setSize(1440, 925);
        this.setResizable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolBarOnTop = new javax.swing.JToolBar();
        desktopPane = new javax.swing.JDesktopPane();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newMediaMenuItem = new javax.swing.JMenuItem();
        separatorMenu1 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        toolBarOnTop.setFloatable(false);
        toolBarOnTop.setRollover(true);
        toolBarOnTop.setBorderPainted(false);
        toolBarOnTop.setOpaque(false);

        fileMenu.setText("File");

        newMediaMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newMediaMenuItem.setText("New Media");
        newMediaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMediaMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newMediaMenuItem);
        fileMenu.add(separatorMenu1);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        mainMenuBar.add(fileMenu);

        toolsMenu.setText("Tools");
        mainMenuBar.add(toolsMenu);

        helpMenu.setText("Help");
        mainMenuBar.add(helpMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolBarOnTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1440, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolBarOnTop, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void newMediaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMediaMenuItemActionPerformed
        // TODO add your handling code here:
//        InternalFrameMedia internalFrame2 = new InternalFrameMedia("Add New Media",true,700,200);
//
//        desktopPane.add(internalFrame2);
//        internalFrame2.setDefaultCloseOperation(JInternalFrame.DISPOSE_ON_CLOSE);
//        internalFrame2.setLocation(400, 100);
//        internalFrame2.setVisible(true);
        

    }//GEN-LAST:event_newMediaMenuItemActionPerformed

    private void populateDesktopGUI()
    {
        InvisibleInternalFrame internalFrameLeft = InternalGUICreator.createTransparentInternalFrame("Search Media",0.25f,10,10,320,830);
        InvisibleInternalFrame internalFrameRigthUpper = InternalGUICreator.createTransparentInternalFrame("Media Information", 0.25f, 335, 10, 1095, 355);
        InvisibleInternalFrame internalFrameRightBottom = InternalGUICreator.createTransparentInternalFrame("Actions/Options", 0.25f, 335, 730, 1095, 110);
        InvisibleInternalFrame internalFrameRigthCenter = InternalGUICreator.createTransparentInternalFrame("Related Media", 0.25f, 335, 370, 1095, 355);
        
        //JLabel label = InternalGUICreator.createLabel("Texto", 20, 50, 100, 25, false);
        //internalFrameLeft.add(label);
        
        // init search media panel
        JPanel panelLeft = InternalGUICreator.createLoweredPanel("",7, 30, 295, 775,0.5f);
        internalFrameLeft.add(panelLeft);
        
//        JLabel labelSearch = InternalGUICreator.createLabel("Search Type : ", 10, 5, 100,20, false);
//        panelLeft.add(labelSearch);
//        
//        JComboBox searchComboBox = InternalGUICreator.createComboBox(120, 5, 150, 20, new String[] {"A","B","C","D","E","F","G","H","I"});
//        panelLeft.add(searchComboBox);
        
        //JTextField text = InternalGUICreator.createTextField(120, 5, 150, 20);
        //panelLeft.add(text);
        
        
        JPanel panelRightU1 = InternalGUICreator.createLoweredPanel("Information",7, 30, 530, 310,0.5f);
        internalFrameRigthUpper.add(panelRightU1);
        
        //JPanel panelRightU2 = InternalGUICreator.createRaisedPanel("Image",545, 30, 530, 310,0.5f);
        //internalFrameRigthUpper.add(panelRightU2);
        
        //Create the nodes.
        DefaultMutableTreeNode top =
            new DefaultMutableTreeNode("The Java Series");
        createNodes(top);

        //Create a tree that allows one selection at a time.
        tree = new JTree(top);
        tree.setCellRenderer(new TrasparentRender());
        tree.getSelectionModel().setSelectionMode
                (TreeSelectionModel.SINGLE_TREE_SELECTION);

        //Listen for when the selection changes.
        tree.addTreeSelectionListener(this);
        tree.setBackground(new Color(0, 0, 0, 0)); 
        //Create the scroll pane and add the tree to it. 
        JScrollPane treeView = new JScrollPane(tree);
        treeView.setOpaque(false);
        treeView.setSize(200, 400);
        treeView.setLocation(10, 30);
        internalFrameLeft.add(treeView);
        
        desktopPane.add(internalFrameLeft);
        desktopPane.add(internalFrameRigthUpper);
        desktopPane.add(internalFrameRightBottom);
        desktopPane.add(internalFrameRigthCenter);
    }
    
    private void createNodes(DefaultMutableTreeNode top) {
        DefaultMutableTreeNode category = null;
        DefaultMutableTreeNode book = null;

        category = new DefaultMutableTreeNode("Books for Java Programmers");
        top.add(category);

        //original Tutorial
        book = new DefaultMutableTreeNode(new MediaWindow.BookInfo
            ("The Java Tutorial: A Short Course on the Basics",
            "tutorial.html"));
        category.add(book);

        //Tutorial Continued
        book = new DefaultMutableTreeNode(new MediaWindow.BookInfo
            ("The Java Tutorial Continued: The Rest of the JDK",
            "tutorialcont.html"));
        category.add(book);

        //JFC Swing Tutorial
        book = new DefaultMutableTreeNode(new MediaWindow.BookInfo
            ("The JFC Swing Tutorial: A Guide to Constructing GUIs",
            "swingtutorial.html"));
        category.add(book);

        //Bloch
        book = new DefaultMutableTreeNode(new MediaWindow.BookInfo
            ("Effective Java Programming Language Guide",
	     "bloch.html"));
        category.add(book);

        //Arnold/Gosling
        book = new DefaultMutableTreeNode(new MediaWindow.BookInfo
            ("The Java Programming Language", "arnold.html"));
        category.add(book);

        //Chan
        book = new DefaultMutableTreeNode(new MediaWindow.BookInfo
            ("The Java Developers Almanac",
             "chan.html"));
        category.add(book);

        category = new DefaultMutableTreeNode("Books for Java Implementers");
        top.add(category);

        //VM
        book = new DefaultMutableTreeNode(new MediaWindow.BookInfo
            ("The Java Virtual Machine Specification",
             "vm.html"));
        category.add(book);

        //Language Spec
        book = new DefaultMutableTreeNode(new MediaWindow.BookInfo
            ("The Java Language Specification",
             "jls.html"));
        category.add(book);
    }
    
    private class BookInfo {
        public String bookName;
        public URL bookURL;

        public BookInfo(String book, String filename) {
            bookName = book;
            bookURL = getClass().getResource(filename);
            if (bookURL == null) {
                System.err.println("Couldn't find file: "
                                   + filename);
            }
        }

        public String toString() {
            return bookName;
        }
    }
    
    @Override
    public void valueChanged(TreeSelectionEvent e) {
        DefaultMutableTreeNode node = (DefaultMutableTreeNode)
                           tree.getLastSelectedPathComponent();

        if (node == null) return;

        Object nodeInfo = node.getUserObject();
        if (node.isLeaf()) {
            MediaWindow.BookInfo book = (MediaWindow.BookInfo)nodeInfo;
                System.out.print(book.bookURL + ":  \n    ");
            
        } else {
             
        }
    }
        
        
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MediaWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JMenuItem newMediaMenuItem;
    private javax.swing.JPopupMenu.Separator separatorMenu1;
    private javax.swing.JToolBar toolBarOnTop;
    private javax.swing.JMenu toolsMenu;
    // End of variables declaration//GEN-END:variables
}



